form {
    /* display: grid; */
    place-content: center;
    /* min-height: 100vh; */
    background-color: var(--form-background);
    max-width: 500px;
}

.form-control--disabled {
    color: var(--form-control-disabled);
    cursor: not-allowed;
}

.input {
    font-size: 16px;
    font-size: max(16px, 1em);
    font-family: inherit;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 2px solid var(--input-border);
    border-radius: 4px;
    transition: 180ms box-shadow ease-in-out;
}

.input:focus {
    border-color: hsl(
        var(--input-focus-h),
        var(--input-focus-s),
        var(--input-focus-l)
    );
    box-shadow: 0 0 0 3px
        hsla(
            var(--input-focus-h),
            var(--input-focus-s),
            var(--input-focus-l) + 40%,
            0.8
        );
    outline: 3px solid transparent;
}

.input:not(textarea) {
    line-height: 1;
    height: 2.25rem;
}

input[type="file"] {
    font-size: 0.9em;
    padding-top: 0.35rem;
}
textarea.input {
    width: 100%;
    resize: none;
    height: 80px;
}
.input[readonly] {
    border-style: dotted;
    cursor: not-allowed;
    color: #777;
}
.input[disabled] {
    --input-border: #ccc;
    background-color: #eee;
    cursor: not-allowed;
}
input[type="checkbox"] {
    /* Add if not using autoprefixer */
    -webkit-appearance: none;
    /* Remove most all native input styles */
    appearance: none;
    /* For iOS < 15 */
    background-color: var(--form-background);
    /* Not removed via appearance */
    margin: 0;

    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 0.15em solid currentColor;
    border-radius: 0.15em;
    transform: translateY(-0.075em);

    display: grid;
    place-content: center;
}

input[type="checkbox"]::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    transform: scale(0);
    transform-origin: bottom left;
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--form-control-color);
    /* Windows High Contrast Mode */
    background-color: CanvasText;
}

input[type="checkbox"]:checked::before {
    transform: scale(1);
}

input[type="checkbox"]:focus {
    outline: max(2px, 0.15em) solid currentColor;
    outline-offset: max(2px, 0.15em);
}

input[type="checkbox"]:disabled {
    background-color: var(--form-control-disabled);

    color: var(--form-control-disabled);
    cursor: not-allowed;
}
label {
    font-size: 1.125rem;
    font-weight: 500;
    display: block;
}

.input + label {
    margin-top: 2rem;
}
/*Select options*/

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: transparent;
    border: none;
    padding: 0 1em 0 0;
    margin: 0;
    width: 100%;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: inherit;
    z-index: 1;
    outline: none;
}
select::-ms-expand {
    display: none;
}

.select {
    display: grid;
    grid-template-areas: "select";
    align-items: center;
    position: relative;
    /* min-width: 15ch; */
    max-width: 30ch;
    border: 1px solid var(--select-border);
    border-radius: 0.25em;
    padding: 0.25em 0.5em;
    font-size: 1.25rem;
    cursor: pointer;
    line-height: 1.1;
    background-color: #fff;
    background-image: linear-gradient(to top, #f9f9f9, #fff 33%);
}
.select select,
.select::after {
    grid-area: select;
}
.select:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: var(--select-arrow);
    -webkit-clip-path: polygon(100% 0%, 0 0%, 50% 100%);
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
}

select:focus + .focus {
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    border: 2px solid var(--select-focus);
    border-radius: inherit;
}

select[multiple] {
    padding-right: 0;
    /*
     * Safari will not reveal an option
     * unless the select height has room to 
     * show all of it
     * Firefox and Chrome allow showing 
     * a partial option
     */
    height: 6rem;
    /* 
     * Experimental - styling of selected options
     * in the multiselect
     * Not supported crossbrowser
     */
}
select[multiple] option {
    white-space: normal;
    outline-color: var(--select-focus);
}

.select--disabled {
    cursor: not-allowed;
    background-color: #eee;
    background-image: linear-gradient(to top, #ddd, #eee 33%);
}

.select + label {
    margin-top: 2rem;
}

dl:nth-child(even) {
    background-color: var(--row-even);
}

dl:nth-child(odd) {
    background-color: var(--row-odd);
}
